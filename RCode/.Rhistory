v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
colMeans(MLE.optim)
I.optim
invI.optim
colMeans(MLE.optim)
I.optim/sim_time
invI.optim
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=2000;cor_par=1;seq=100
param=c(0.5,0,0.4,-0.2)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
y11<-rpois(seq, lambda = 1.65)
y12<-rpois(seq, lambda = 2.46)
y21<-rpois(seq, lambda = 1.35)
y22<-rpois(seq, lambda = 2.01)
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve(ABBA$hessian)
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
i.tt<-( tao[i]+tao[i]*eta[i]+gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]+gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]+gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I.cf<-I.cf+matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
invI.closeform<-solve(I.cf)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
colMeans(MLE.optim)
I.optim/sim_time
invI.optim
colMeans(MLE.glm)
I.glm
I.glm/sim_time
I.optim/sim_time
invI.glm
invI.optim
I.cf/sim_time
I.glm/sim_time
V.cf/sim_time
invI.closeform
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=2000;cor_par=1;seq=100
param=c(0.5,0,0.4,-0.2)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
y11<-rpois(seq, lambda = 1.65)
y12<-rpois(seq, lambda = 2.46)
y21<-rpois(seq, lambda = 1.35)
y22<-rpois(seq, lambda = 2.01)
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve(ABBA$hessian)
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I.cf<-I.cf+matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
invI.closeform<-invI.closeform+solve(I.cf)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
colMeans(MLE.optim)
I.optim/sim_time
invI.optim
colMeans(MLE.glm)
I.glm/sim_time
invI.glm
log(c(mean(tao),mean(eta),mean(gam),mean(del)))
I.cf/sim_time
invI.closeform
V.cf/sim_time
solve(I.cf/sim_time)
invI.glm
V.cf/sim_time
I.glm/sim_time
I.cf/sim_time
I.glm/sim_time
I.optim/sim_time
invI.optim
invI.glm
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=2000;cor_par=1;seq=100
param=c(0.5,0,0.4,-0.2)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
y11<-rpois(seq, lambda = 1.65)
y12<-rpois(seq, lambda = 2.46)
y21<-rpois(seq, lambda = 1.35)
y22<-rpois(seq, lambda = 2.01)
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve(ABBA$hessian)
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I.cf<-I.cf+matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
invI.closeform<-invI.closeform+solve(matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE))
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
invI.closeform
V.cf/sim_time
invI.closeform/sim_time
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=2000;cor_par=1;seq=100
param=c(0.5,0,0.4,-0.2)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
y11<-rpois(seq, lambda = 1.65)
y12<-rpois(seq, lambda = 2.46)
y21<-rpois(seq, lambda = 1.35)
y22<-rpois(seq, lambda = 2.01)
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve(ABBA$hessian)
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
temp<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+temp
invI.closeform<-invI.closeform+solve(temp)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
I.cf/sim_time
invI.closeform
invI.closeform/sim_time
V.cf/sim_time
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=2000;cor_par=1;seq=100
param=c(0.5,0,0.4,-0.2)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
y11<-rpois(seq, lambda = 1.65)
y12<-rpois(seq, lambda = 2.46)
y21<-rpois(seq, lambda = 1.35)
y22<-rpois(seq, lambda = 2.01)
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve(ABBA$hessian)
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
I.cf/sim_time
invI.closeform/sim_time
V.cf/sim_time
invI.glm
solve((ABBA$hessian))
vcov(mod.1)
solve((ABBA$hessian)/(2*seq))
solve((ABBA$hessian)/(2*seq))/vcov(mod.1)
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=2000;cor_par=1;seq=100
param=c(0.5,0,0.4,-0.2)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
y11<-rpois(seq, lambda = 1.65)
y12<-rpois(seq, lambda = 2.46)
y21<-rpois(seq, lambda = 1.35)
y22<-rpois(seq, lambda = 2.01)
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
colMeans(MLE.optim)
I.optim/sim_time
invI.optim
colMeans(MLE.glm)
I.glm/sim_time
invI.glm/sim_time
invI.optim/sim_time
I.cf/sim_time
invI.closeform/sim_time
V.cf/sim_time
