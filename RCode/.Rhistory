return(list.IV)
}
#format that output to excel
#obj=obj.ind;num.param=length(param_222);MATS=MATS.ind
Output.Format<-function(obj,num.param,MATS){
space<-matrix(c('','',''), nrow=1,ncol = length(c('','','')))
obj.names<-matrix(0,ncol = num.param,length(obj))
for (i in 1:length(obj)){obj.names[i,]<-cbind(obj[i],space)}
#format result that we want to show in excel
seq.result<-matrix(c('tao_hat','eta_hat','gamma_hat','delta_hat'),ncol = num.param,nrow = 1)
for (i in 1:length(obj)){
temp<-rbind(obj.names[i,],MATS[[i]])
seq.result<-rbind(seq.result,temp)
}
return(seq.result)
}
#main
#result:to store result of each seq_size
result.ind <- list()
result.cor <- list()
#simulation for ABBA
set.seed(110225021)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.ind)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/(sim_time*seq*2),5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/(sim_time*seq*2),5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
#I.hat & V.hat
Matrix.IV<-function(cros.type,mle.values,x.mat,seq.size,data){
num.seq<-if (nchar(cros.type)==9) 3 else 2
mat.I<- matrix(0, nrow = length(mle.values), ncol = length(mle.values))
mat.V<- matrix(0, nrow = length(mle.values), ncol = length(mle.values))
mat.score<- matrix(0, nrow = seq.size, ncol = length(mle.values))
mean.est<-exp(mle.values%*%x.mat)
for (i in 1:length(mle.values) ){
mat.I[i,]<-mean.est%*%(t(x.mat)*x.mat[i,])/num.seq
mat.score[,i]<-sweep(data, 2, mean.est[1,])%*%x.mat[i,]
mat.V[i,]<- colSums(mat.score*mat.score[,i])/(seq.size*num.seq)
}
mat.V<-Matrix::forceSymmetric(mat.V,uplo="L")
list.IV <- list("I.hat" = mat.I, "V.hat" =mat.V)
return(list.IV)
}
result.ind <- list()
result.cor <- list()
#simulation for ABBA
set.seed(110225021)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.ind)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/(sim_time*seq*2),5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/(sim_time*seq*2),5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
write.xlsx(result.ind, file = paste0(Sys.Date(),'ABBAind.xlsx'))
write.xlsx(result.cor, file = paste0(Sys.Date(),'ABBAcor.xlsx'))
set.seed(110225021)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.ind)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/sim_time,5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/sim_time,5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
#main
#result:to store result of each seq_size
result.ind <- list()
result.cor <- list()
#simulation for ABBA
set.seed(110225021)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.ind)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/sim_time,5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/sim_time,5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
write.xlsx(result.ind, file = paste0(Sys.Date(),'ABBAind.xlsx'))
write.xlsx(result.cor, file = paste0(Sys.Date(),'ABBAcor.xlsx'))
set.seed(110225021)
setwd("C:/Github/Study_CrossoverDesign/RCode")
sim_time=2000
seq_size<-c(25,50,100,200)
cor_param=0.1
cros_type='ABBA'
#tao,eta,gamma,delta
params = matrix(c(1.0, 0.7, 0.3, 0.2), nrow=1,ncol=4)
#link of mean.i11,mean.mean.i12,mean.i21,mean.22
x.mat  <-  matrix(c(1,0,0,0,1,1,1,0,1,1,0,1,1,0,1,1), nrow = 4, ncol = 4)
mean_true=exp(params%*%x.mat)
pi=0.5#(seq_size)/(seq_size*2)
I.true<- matrix(0, nrow = 4, ncol = 4)
for (i in 1:length(params) ){ I.true[i,]<-0.5*mean_true%*%(t(x.mat)*x.mat[i,])}
#the form of matrix that export to excel
#output object
obj<-c('MLE.optim','MLE.closeform','I.hat.hessian','I.hat','V.hat.matix','NS.MLE.optim','NS.MLE.closeform','inv(I.hat)')
#name of output object
space<-matrix(c('','',''), nrow=1,ncol = 3)
obj.names<-matrix(0,ncol = 4,length(obj))
for (i in 1:length(obj)){obj.names[i,]<-cbind(obj[i],space)}
result <- list()#to store result of each seq_size
#use optim to obtain MLE、I_hat、V_hat
for (seq in seq_size){
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
I.optim=0
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
I.hat<- 0
V.hat<- 0
for (i in 1:sim_time){
pi=(seq)/(seq*2)
data <-  matrix(0, nrow = seq, ncol = 4)
for (j in 1:length(mean_true)) {data[,j] =rpois(seq, lambda = mean_true[1,j])}
negll <- function(param) { sum(factorial(data))
-sum( param[1]*data[,1]-exp(param[1])+sum(param[1:3])*data[,2]-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*data[,3]-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*data[,4]-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.95, 0.65, 0.25, 0.15), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim <-I.optim+ABBA$hessian
y.sum=colSums(data)
tao.hat=log(y.sum[1]/seq)
eta.hat=0.5*(log(y.sum[2])+log(y.sum[3])-log(y.sum[1])-log(y.sum[4]))
gamma.hat=0.5*(log(y.sum[2])+log(y.sum[4])-log(y.sum[1])-log(y.sum[3]))
delta.hat=0.5*(log(y.sum[3])+log(y.sum[4])-log(y.sum[1])-log(y.sum[2]))
MLE.i = matrix(c(tao.hat, eta.hat, gamma.hat, delta.hat), nrow=1,ncol=4)
mean_est<-exp(MLE.i%*%x.mat)
I.hat.i<- matrix(0, nrow = 4, ncol = 4)
V.hat.i<- matrix(0, nrow = 4, ncol = 4)
score<- matrix(0, nrow = seq, ncol = 4)
for (k in 1:length(params) ){
I.hat.i[k,]<-pi*mean_est%*%(t(x.mat)*x.mat[k,])
score[,k]<-sweep(data, 2, mean_est[1,])%*%x.mat[k,]
V.hat.i[k,]<- colSums(score*score[,k])/(seq*2)
}
V.hat.i<-Matrix::forceSymmetric(V.hat.i,uplo="L")
MLE.closeform[i,]<- MLE.i
I.hat<-I.hat+I.hat.i
V.hat<-V.hat+V.hat.i
}
#remove outlier of MLE.closeform
#MLE.closeform<-apply(MLE.closeform, 2, sort)
#MLE.closeform <- MLE.closeform[11:(nrow(MLE.closeform) - 10),]
#store result in MATS for seq
MATS <- list(signif(t(as.matrix(colMeans(MLE.optim))),5),signif(t(as.matrix(colMeans(MLE.closeform))),5),signif(I.optim/(sim_time*seq*2),5),signif(I.hat/sim_time,5),signif(V.hat/sim_time,5),signif(cov(MLE.optim)*seq*2,5),signif(cov(MLE.closeform)*seq*2,5),signif(solve(I.hat/sim_time),5))
#format result that we want to show in excel
seq.result<-matrix(c('tao_hat','eta_hat','gamma_hat','delta_hat'),ncol = 4,nrow = 1)
for (i in 1:length(obj)){
temp<-rbind(obj.names[i,],MATS[[i]])
seq.result<-rbind(seq.result,temp)}
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result <- append(result, list( num = seq.result))
}
result <- list()#to store result of each seq_size
#use optim to obtain MLE、I_hat、V_hat
for (seq in seq_size){
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
I.optim=0
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
I.hat<- 0
V.hat<- 0
for (i in 1:sim_time){
pi=(seq)/(seq*2)
data <-  matrix(0, nrow = seq, ncol = 4)
for (j in 1:length(mean_true)) {data[,j] =rpois(seq, lambda = mean_true[1,j])}
negll <- function(param) { sum(factorial(data))
-sum( param[1]*data[,1]-exp(param[1])+sum(param[1:3])*data[,2]-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*data[,3]-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*data[,4]-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.95, 0.65, 0.25, 0.15), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim <-I.optim+ABBA$hessian
y.sum=colSums(data)
tao.hat=log(y.sum[1]/seq)
eta.hat=0.5*(log(y.sum[2])+log(y.sum[3])-log(y.sum[1])-log(y.sum[4]))
gamma.hat=0.5*(log(y.sum[2])+log(y.sum[4])-log(y.sum[1])-log(y.sum[3]))
delta.hat=0.5*(log(y.sum[3])+log(y.sum[4])-log(y.sum[1])-log(y.sum[2]))
MLE.i = matrix(c(tao.hat, eta.hat, gamma.hat, delta.hat), nrow=1,ncol=4)
mean_est<-exp(MLE.i%*%x.mat)
I.hat.i<- matrix(0, nrow = 4, ncol = 4)
V.hat.i<- matrix(0, nrow = 4, ncol = 4)
score<- matrix(0, nrow = seq, ncol = 4)
for (k in 1:length(params) ){
I.hat.i[k,]<-pi*mean_est%*%(t(x.mat)*x.mat[k,])
score[,k]<-sweep(data, 2, mean_est[1,])%*%x.mat[k,]
V.hat.i[k,]<- colSums(score*score[,k])/(seq*2)
}
V.hat.i<-Matrix::forceSymmetric(V.hat.i,uplo="L")
MLE.closeform[i,]<- MLE.i
I.hat<-I.hat+I.hat.i
V.hat<-V.hat+V.hat.i
}
#remove outlier of MLE.closeform
#MLE.closeform<-apply(MLE.closeform, 2, sort)
#MLE.closeform <- MLE.closeform[11:(nrow(MLE.closeform) - 10),]
#store result in MATS for seq
MATS <- list(signif(t(as.matrix(colMeans(MLE.optim))),5),signif(t(as.matrix(colMeans(MLE.closeform))),5),signif(I.optim/(sim_time*seq*2),5),signif(I.hat/sim_time,5),signif(as.matrix(V.hat/sim_time),5),signif(cov(MLE.optim)*seq*2,5),signif(cov(MLE.closeform)*seq*2,5),signif(solve(I.hat/sim_time),5))
#format result that we want to show in excel
seq.result<-matrix(c('tao_hat','eta_hat','gamma_hat','delta_hat'),ncol = 4,nrow = 1)
for (i in 1:length(obj)){
temp<-rbind(obj.names[i,],MATS[[i]])
seq.result<-rbind(seq.result,temp)}
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result <- append(result, list( num = seq.result))
}
write.xlsx(result, file = paste0(Sys.Date(),'.xlsx'))
Mean.True(param_222,xmat_222)
exp(params%*%x.mat)
result.ind <- list()
result.cor <- list()
#simulation for ABBA
set.seed(110225021)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind <-  matrix(0, nrow = seq, ncol = nchar(cros_type[1]))
for (j in 1:length(Mean.True(param_222,xmat_222))) {data.ind[,j] =rpois(seq, lambda = Mean.True(param_222,xmat_222))}
#data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.ind)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/sim_time,5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/sim_time,5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
write.xlsx(result.ind, file = paste0(Sys.Date(),'.xlsx'))
Mean.True(param_222,xmat_222)
length(Mean.True(param_222,xmat_222))
set.seed(110225021)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind <-  matrix(0, nrow = seq, ncol = nchar(cros_type[1]))
for (j in 1:length(Mean.True(param_222,xmat_222))) {data.ind[,j] =rpois(seq, lambda = Mean.True(param_222,xmat_222)[1,j])}
#data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.ind)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/sim_time,5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/sim_time,5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
write.xlsx(result.ind, file = paste0(Sys.Date(),' ind.xlsx'))
cros_type[1]
result.ind <- list()
result.cor <- list()
#simulation for ABBA
set.seed(19980716)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.ind)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/sim_time,5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/sim_time,5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
write.xlsx(result.ind, file = paste0(Sys.Date(),'ABBAind.xlsx'))
write.xlsx(result.ind, file = paste0(Sys.Date(),'ABBAind.xlsx'))
write.xlsx(result.cor, file = paste0(Sys.Date(),'ABBAcor.xlsx'))
#main
#result:to store result of each seq_size
result.ind <- list()
result.cor <- list()
#simulation for ABBA
set.seed(19980716)
for (seq in seq_size){
MLE.ind<-matrix(0, nrow = sim_time, ncol = length(param_222))
MLE.cor<-matrix(0, nrow = sim_time, ncol = length(param_222))
I.ind<- 0 ; I.cor<- 0 ; V.ind<-0 ;V.cor<-0
for (i in 1:sim_time){
data.ind<-Data.ind(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size = seq )
MLE.ind.i<-MLE.ABBA(data.ind,seq.size=seq)
mean.est<-Mean.True(MLE.ind.i,xmat_222)
IV.ind.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.ind.i, x.mat=xmat_222, seq.size=seq, data=data.ind)
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =seq,cor.par = cor_par )
MLE.cor.i<-MLE.ABBA(data.cor,seq.size=seq)
mean.est<-Mean.True(MLE.cor.i,xmat_222)
IV.cor.i<-Matrix.IV(cros.type=cros_type[1], mle.values=MLE.cor.i, x.mat=xmat_222, seq.size=seq, data=data.cor)
MLE.ind[i,]<-MLE.ind.i
I.ind.i<-IV.ind.i$I.hat
V.ind.i<-Matrix::forceSymmetric(IV.ind.i$V.hat,uplo="L")
I.ind<-I.ind+I.ind.i
V.ind<-V.ind+V.ind.i
MLE.cor[i,]<-MLE.cor.i
I.cor.i<-IV.cor.i$I.hat
V.cor.i<-Matrix::forceSymmetric(IV.cor.i$V.hat,uplo="L")
I.cor<-I.cor+I.cor.i
V.cor<-V.cor+V.cor.i
}
IVI.cor<-solve(I.cor/sim_time)%*%(as.matrix(V.cor)/sim_time)%*%solve(I.cor/sim_time)
#store result in MATS for seq
MATS.ind <- list(signif(t(as.matrix(colMeans(MLE.ind))),5),signif(I.ind/sim_time,5),signif(as.matrix(V.ind)/sim_time,5),signif(cov(MLE.ind)*seq*2,5),signif(solve(I.ind/sim_time),5))
MATS.cor <- list(signif(t(as.matrix(colMeans(MLE.cor))),5),signif(I.cor/sim_time,5),signif(as.matrix(V.cor)/sim_time,5),signif(cov(MLE.cor)*seq*2,5),signif(IVI.cor,5))
obj.ind<-c('MLE.closeform','I.hat.ind','V.hat.ind','NS.MLE.closeform.ind','inv(I.hat.ind)')
obj.cor<-c('MLE.closeform','I.hat.cor','V.hat.cor','NS.MLE.closeform.cor','inv(I.hat.cor).V.hat.cor.inv(I.hat.cor)')
#format result that we want to show in excel
seq.res.ind<-Output.Format(obj=obj.ind,num.param=length(param_222),MATS=MATS.ind)
seq.res.cor<-Output.Format(obj=obj.cor,num.param=length(param_222),MATS=MATS.cor)
#store result of all seq_size
num=seq_size[which(seq_size == seq)]
result.ind <- append(result.ind, list( num = seq.res.ind))
result.cor <- append(result.cor, list( num = seq.res.cor))
}
write.xlsx(result.ind, file = paste0(Sys.Date(),'ABBAind.xlsx'))
write.xlsx(result.cor, file = paste0(Sys.Date(),'ABBAcor.xlsx'))
