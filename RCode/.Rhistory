#install.packages("quantmod")
library(quantmod)
install.packages("quantmod")
install.packages(c("curl", "evaluate", "rmarkdown", "timeDate"))
#install.packages("quantmod")
library(quantmod)
install.packages("xts")
install.packages("zoo")
#install.packages("quantmod")
library(quantmod)
#install.packages("quantmod")
library(zoo)
#install.packages("quantmod")
library(xts)
library(quantmod)
getSymbols("AAPL")
chartSeries(AAPL)
#Generate data
cros.type="ABBA"
mean.true=mean_true
seq.size=10
num.seq=2
cor.par=3
param_222=c(1.0,0.7,0.3,0.2)
xmat_222=matrix(c(1,0,0,0, 1,1,1,0, 1,1,0,1, 1,0,1,1), nrow = 4, ncol = 4)
mean.true=Mean.True(param_222,xmat_222)
#Par.values==TrueMean
Mean.True<-function(Par.values,x.mat){  return(exp(Par.values%*%x.mat))}
mean.true=Mean.True(param_222,xmat_222)
#Generate data
cros.type="ABBA"
mean.true=Mean.True(param_222,xmat_222)
seq.size=10
num.seq=2
cor.par=3
#生成一組nui乘上兩個mean
nui<-rgamma(n=seq.size,shape=1/cor.par,scale=cor.par)
c(outer(mean.true[1:2], nui, function(x, y) x * y))
mean.true
as.matrix(c(nui,outer(mean.true[1:2],  function(x, y) x * y)),ncol=2,nrow=10)
c(nui,outer(mean.true[1:2],  function(x, y) x * y))
as.matrix(c(outer(nui,mean.true[1:2],  function(x, y) x * y)),ncol=2,nrow=10)
nui
as.matrix(c(outer(nui,mean.true[1:2],  function(x, y) x * y)),ncol=2,nrow=10)
temp<-split(d, ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/max))
temp<-split(c(outer(nui,mean.true[1:2],  function(x, y) x * y)), ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/max))
d<-c(outer(nui,mean.true[1:2],  function(x, y) x * y))
split(d, ceiling(seq_along(d)/max))
seq_along(d)
ceiling(seq_along(d)/max)
x<-seq_along(d)
split(d, ceiling(x/max))
d<-as.numeric(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))
split(d, ceiling(x/max))
x<-seq_along(d)
x
x/max
split(d, ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/2))
c(outer(nui,mean.true[1:2],  function(x, y) x * y))
d<-split(d, ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/2))
View(d)
d<-split(d, ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/10))
d<-split(c(outer(nui,mean.true[1:2],  function(x, y) x * y)), ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/20))
View(d)
d<-split(c(outer(nui,mean.true[1:2],  function(x, y) x * y)), ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/10))
xd
d
c(outer(mean.true[1:2], nui, function(x, y) x * y))
nui
mean.true
data<-split(c(outer(nui,mean.true[1:2],  function(x, y) x * y)), ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/10))
View(data)
data <-  matrix(0, nrow = seq.size, ncol = nchar(cros.type))
data[,1:2]<-split(c(outer(nui,mean.true[1:2],  function(x, y) x * y)), ceiling(seq_along(c(outer(nui,mean.true[1:2],  function(x, y) x * y)))/10))
View(data)
data
unlist(d)
unlist(d,use.names = False)
unlist(d,use.names = FALSE)
d
unlist(d[1],use.names = FALSE)
unlist(d[2],use.names = FALSE)
data[,1]<-unlist(d[1],use.names = FALSE)
data[,2]<-unlist(d[2],use.names = FALSE)
data <-  matrix(0, nrow = seq.size, ncol = nchar(cros.type))
data[,1]<-unlist(d[1],use.names = FALSE)
data[,2]<-unlist(d[2],use.names = FALSE)
View(data)
d
c(outer(nui,mean.true[1:2],  function(x, y) x * y))
#install.packages("quantmod")
library(quantmod)
install.packages("xts")
library(xts)
#install.packages("quantmod")
library(quantmod)
install.packages("TTR")
library(zoo)
setwd("C:/Github/Study_CrossoverDesign/RCode")
#=============================================
#simulation parameter
#=============================================
sim_time=3000;cor_par=1/6
seq_size=c(25,50,100,200,300)
cros_type=c('ABBA','ABBBAA','AABABABAA','ABCBCACAB','BACACBBCA','BBAACBCAC')
#=============================================
#true value of params with treat-seq-time
#=============================================
param_222=c(1.0,0.7,0.3,0.2);param_223=c(1.0,0.7,0.3,0.3,0.2);param_233=c(1.0,0.7,0.3,0.3,0.2,0.2);param_333=c(1.0,0.7,0.7,0.3,0.3,0.2,0.2)
#=================================================
#Link of Yist:Y11,Y12,Y21,Y22
#row is vector of param,column is x.mat of Yist
#=================================================
#ABBA
xmat_222=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
Mean.True<-function(Par.values,x.mat){  return(exp(Par.values%*%x.mat))}
#I.true
Matrix.I<-function(cors.type,params,x.mat){
num.seq<-if (nchar(cros.type)==9) 3 else 2
mat.I<- matrix(0, nrow = length(params), ncol = length(params))
for (i in 1:length(params) ){ mat.I[i,]<-Mean%*%(t(x.mat)*x.mat[i,])/num.seq}
return(mat.I)
}
#======================================================================
#Generate data
#======================================================================
Data.ind<-function(cros.type,mean.true,seq.size){
num.seq<-if (nchar(cros.type)==9) 3 else 2
data <-  matrix(0, nrow = seq.size, ncol = nchar(cros.type))
for (j in 1:length(mean.true)) {data[,j] =rpois(seq.size, lambda = mean.true[1,j])}
return(data)
}
#--------------------------------------------------------------------
Data.cor<-function(cros.type,mean.true,seq.size,cor.par){
num.seq<-if (nchar(cros.type)==9) 3 else 2
nui<-replicate(2,rgamma(n=seq.size,shape=1/cor.par,scale=cor.par))
mean.seq<-matrix(mean.true,ncol=nchar(cros.type)/num.seq,nrow=num.seq)
mean.cor<-list();data <-matrix(0, nrow = seq.size, ncol = nchar(cros.type))
for (i in 1:num.seq){
m<-split(c(outer(nui[,i],mean.seq[,i],  function(x, y) x * y)), ceiling(seq_along(c(outer(nui[,i],mean.seq[,i],  function(x, y) x * y)))/seq.size))
mean.cor<-append(mean.cor,m)
}
mean.cor<- t(matrix(unlist(mean.cor), ncol = seq.size, byrow = TRUE))
for (i in 1:nchar(cros.type)){
list_poisson <- unlist(lapply(mean.cor[,i], FUN = function(x, y) rpois(y, x), y = 1))
data[,i]<-list_poisson
}
return(data)
}
#--------------------------------------------------------------------
#get correlation matrix
data.cor<-Data.cor(cros.type = cros_type[1],mean.true =Mean.True(param_222,xmat_222),seq.size =100000,cor.par = cor_par )
cor(data.cor)
setwd("C:/Github/Study_CrossoverDesign/RCode")
setwd("C:/Github/Study_CrossoverDesign/RCode")
