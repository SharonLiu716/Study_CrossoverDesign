X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
#mean=r*(1-p)/p
# y11<-rnbinom(n = seq, size = 2, prob = 0.6)
# y12<-rnbinom(n = seq, size = 3, prob = 0.6)
# y21<-rnbinom(n = seq, size = 2, prob = 0.8)
# y22<-rnbinom(n = 100000, size = 3, prob = 0.8)
# Y <- c(y11,y12,y21,y22)
y11<-rpois(seq, lambda = mean.true[1])
y12<-rpois(seq, lambda = mean.true[2])
y21<-rpois(seq, lambda = mean.true[3])
y22<-rpois(seq, lambda = mean.true[4])
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
colMeans(MLE.optim)
invI.optim/sim_time
log(c(mean(tao),mean(eta),mean(gam),mean(del)))
I.cf/sim_time
invI.closeform/sim_time
V.cf/sim_time
I.cf/sim_time
var(log(tao))
cov.m<-matrix(c(var(log(tao)),cov(log(tao),log(eta)),cov(log(tao),log(gam)),cov(log(tao),log(del)),
cov(log(tao),log(eta)),var(log(eta)),cov(log(gam),log(eta)),cov(log(del),log(eta)),
cov(log(tao),log(gam)),cov(log(gam),log(eta)),var(log(gam)),cov(log(gam),log(del)),
cov(log(tao),log(del)),cov(log(del),log(eta)),cov(log(gam),log(del)),var(log(del))), nrow = 4, ncol = 4,byrow = TRUE)
cov.m*2*seq
V.cf/sim_time
invI.closeform/sim_time
cov.m*2*seq
1/Matrix.AB(I.cf/sim_time,V.cf/sim_time,2)$Mat.A
1/Matrix.AB(I.cf/sim_time,V.cf/sim_time,2)$Mat.B
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(1.2,0,1.0,0.2)#c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
W.na1<-0;W.rb1<-0
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
#mean=r*(1-p)/p
# y11<-rnbinom(n = seq, size = 2, prob = 0.6)
# y12<-rnbinom(n = seq, size = 3, prob = 0.6)
# y21<-rnbinom(n = seq, size = 2, prob = 0.8)
# y22<-rnbinom(n = 100000, size = 3, prob = 0.8)
# Y <- c(y11,y12,y21,y22)
y11<-rpois(seq, lambda = mean.true[1])
y12<-rpois(seq, lambda = mean.true[2])
y21<-rpois(seq, lambda = mean.true[3])
y22<-rpois(seq, lambda = mean.true[4])
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
#Matrix I & Matrix V
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.gg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.ee<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.dd<- ( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<- ( tao[i]*eta[i]*gam[i] )/2
i.ed<- ( tao[i]*eta[i]*del[i] )/2
i.gd<- ( tao[i]*gam[i]*del[i] )/2
I<-matrix(c(i.tt,i.ee,i.gg,i.dd,
i.ee,i.ee,i.eg,i.ed,
i.gg,i.eg,i.gg,i.gd,
i.dd,i.ed,i.gd,i.dd),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
i.ep = matrix(c(i.ee, i.eg, i.ed), ncol = 3)
i.pp = matrix(c(i.tt, i.gg, i.dd, i.gg, i.gg, i.gd, i.dd,
i.gd, i.dd), nrow = 3, ncol = 3)
A = i.ee - i.ep %*% solve(i.pp) %*% t(i.ep)
v.pe = matrix(c(v.te, v.eg, v.ed), nrow = 3)
v.pp = matrix(c(v.tt, v.tg, v.td, v.tg, v.gg, v.gd, v.td,
v.gd, v.dd), nrow = 3, ncol = 3)
B = v.ee - 2 * i.ep %*% solve(i.pp) %*% v.pe +
i.ep %*% solve(i.pp) %*% v.pp %*% solve(i.pp) %*% t(i.ep)
# s0 = n * ( mean(y12) - f.inv(alp.0[i]+ga.0[i]) +
#              mean(y21) - f.inv(alp.0[i]+del.0[i]) )
# sna = s0 / A * s0 / (2*n)
# srb = s0 / B * s0 / (2*n)
# if( sna <= qchisq(0.95, 1) )  S.na1 = S.na1+1
# if( srb <= qchisq(0.95, 1) )  S.rb1 = S.rb1+1
#wald test
wna = eta[i] * A * eta[i] * 2*n
wrb = eta[i] * A^2 / B * eta[i] * 2*n
if( wna<=qchisq(0.95, 1) )  W.na1 = W.na1+1
if( wrb<=qchisq(0.95, 1) )  W.rb1 = W.rb1+1
}
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(1.2,0,1.0,0.2)#c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
W.na1<-0;W.rb1<-0
#---------------------------------------------
#True I .V
#---------------------------------------------
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
#mean=r*(1-p)/p
# y11<-rnbinom(n = seq, size = 2, prob = 0.6)
# y12<-rnbinom(n = seq, size = 3, prob = 0.6)
# y21<-rnbinom(n = seq, size = 2, prob = 0.8)
# y22<-rnbinom(n = 100000, size = 3, prob = 0.8)
# Y <- c(y11,y12,y21,y22)
y11<-rpois(seq, lambda = mean.true[1])
y12<-rpois(seq, lambda = mean.true[2])
y21<-rpois(seq, lambda = mean.true[3])
y22<-rpois(seq, lambda = mean.true[4])
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
#Matrix I & Matrix V
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.gg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.ee<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.dd<- ( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<- ( tao[i]*eta[i]*gam[i] )/2
i.ed<- ( tao[i]*eta[i]*del[i] )/2
i.gd<- ( tao[i]*gam[i]*del[i] )/2
I<-matrix(c(i.tt,i.ee,i.gg,i.dd,
i.ee,i.ee,i.eg,i.ed,
i.gg,i.eg,i.gg,i.gd,
i.dd,i.ed,i.gd,i.dd),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.ee + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.gg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.dd + cov(y21,y22)
v.ee = i.ee
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.gg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
i.ep = matrix(c(i.ee, i.eg, i.ed), ncol = 3)
i.pp = matrix(c(i.tt, i.gg, i.dd, i.gg, i.gg, i.gd, i.dd,
i.gd, i.dd), nrow = 3, ncol = 3)
A = i.ee - i.ep %*% solve(i.pp) %*% t(i.ep)
v.pe = matrix(c(v.te, v.eg, v.ed), nrow = 3)
v.pp = matrix(c(v.tt, v.tg, v.td, v.tg, v.gg, v.gd, v.td,
v.gd, v.dd), nrow = 3, ncol = 3)
B = v.ee - 2 * i.ep %*% solve(i.pp) %*% v.pe +
i.ep %*% solve(i.pp) %*% v.pp %*% solve(i.pp) %*% t(i.ep)
# s0 = n * ( mean(y12) - f.inv(alp.0[i]+ga.0[i]) +
#              mean(y21) - f.inv(alp.0[i]+del.0[i]) )
# sna = s0 / A * s0 / (2*n)
# srb = s0 / B * s0 / (2*n)
# if( sna <= qchisq(0.95, 1) )  S.na1 = S.na1+1
# if( srb <= qchisq(0.95, 1) )  S.rb1 = S.rb1+1
#wald test
wna = eta[i] * A * eta[i] * 2*n
wrb = eta[i] * A^2 / B * eta[i] * 2*n
if( wna<=qchisq(0.95, 1) )  W.na1 = W.na1+1
if( wrb<=qchisq(0.95, 1) )  W.rb1 = W.rb1+1
}
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(1.2,0,1.0,0.2)#c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
W.na1<-0;W.rb1<-0
#---------------------------------------------
#True I .V
#---------------------------------------------
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
set.seed(110225021)
for (i in 1:sim_time){
#mean=r*(1-p)/p
# y11<-rnbinom(n = seq, size = 2, prob = 0.6)
# y12<-rnbinom(n = seq, size = 3, prob = 0.6)
# y21<-rnbinom(n = seq, size = 2, prob = 0.8)
# y22<-rnbinom(n = 100000, size = 3, prob = 0.8)
# Y <- c(y11,y12,y21,y22)
y11<-rpois(seq, lambda = mean.true[1])
y12<-rpois(seq, lambda = mean.true[2])
y21<-rpois(seq, lambda = mean.true[3])
y22<-rpois(seq, lambda = mean.true[4])
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
#Matrix I & Matrix V
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.gg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.ee<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.dd<- ( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<- ( tao[i]*eta[i]*gam[i] )/2
i.ed<- ( tao[i]*eta[i]*del[i] )/2
i.gd<- ( tao[i]*gam[i]*del[i] )/2
I<-matrix(c(i.tt,i.ee,i.gg,i.dd,
i.ee,i.ee,i.eg,i.ed,
i.gg,i.eg,i.gg,i.gd,
i.dd,i.ed,i.gd,i.dd),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.ee + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.gg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.dd + cov(y21,y22)
v.ee = i.ee
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.gg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
i.ep = matrix(c(i.ee, i.eg, i.ed), ncol = 3)
i.pp = matrix(c(i.tt, i.gg, i.dd, i.gg, i.gg, i.gd, i.dd,
i.gd, i.dd), nrow = 3, ncol = 3)
A = i.ee - i.ep %*% solve(i.pp) %*% t(i.ep)
v.pe = matrix(c(v.te, v.eg, v.ed), nrow = 3)
v.pp = matrix(c(v.tt, v.tg, v.td, v.tg, v.gg, v.gd, v.td,
v.gd, v.td), nrow = 3, ncol = 3)
B = v.ee - 2 * i.ep %*% solve(i.pp) %*% v.pe +
i.ep %*% solve(i.pp) %*% v.pp %*% solve(i.pp) %*% t(i.ep)
# s0 = n * ( mean(y12) - f.inv(alp.0[i]+ga.0[i]) +
#              mean(y21) - f.inv(alp.0[i]+del.0[i]) )
# sna = s0 / A * s0 / (2*n)
# srb = s0 / B * s0 / (2*n)
# if( sna <= qchisq(0.95, 1) )  S.na1 = S.na1+1
# if( srb <= qchisq(0.95, 1) )  S.rb1 = S.rb1+1
#wald test
wna = eta[i] * A * eta[i] * 2*n
wrb = eta[i] * A^2 / B * eta[i] * 2*n
if( wna<=qchisq(0.95, 1) )  W.na1 = W.na1+1
if( wrb<=qchisq(0.95, 1) )  W.rb1 = W.rb1+1
}
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(1.2,0,1.0,0.2)#c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
W.na1<-0;W.rb1<-0
#---------------------------------------------
#True I .V
#---------------------------------------------
#========================================================
#independent data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c();eta.var<-c()
set.seed(110225021)
for (i in 1:sim_time){
#mean=r*(1-p)/p
# y11<-rnbinom(n = seq, size = 2, prob = 0.6)
# y12<-rnbinom(n = seq, size = 3, prob = 0.6)
# y21<-rnbinom(n = seq, size = 2, prob = 0.8)
# y22<-rnbinom(n = 100000, size = 3, prob = 0.8)
# Y <- c(y11,y12,y21,y22)
y11<-rpois(seq, lambda = mean.true[1])
y12<-rpois(seq, lambda = mean.true[2])
y21<-rpois(seq, lambda = mean.true[3])
y22<-rpois(seq, lambda = mean.true[4])
Y <- c(y11,y12,y21,y22)
df.ind = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.ind)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-mean(y11)
eta[i]<-sqrt( sum(y12)*sum(y21)/(sum(y11)*sum(y22)) )
gam[i]<-sqrt( sum(y12)*sum(y22)/(sum(y11)*sum(y21)) )
del[i]<-sqrt( sum(y21)*sum(y22)/(sum(y11)*sum(y12)) )
#Matrix I & Matrix V
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.gg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.ee<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.dd<- ( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<- ( tao[i]*eta[i]*gam[i] )/2
i.ed<- ( tao[i]*eta[i]*del[i] )/2
i.gd<- ( tao[i]*gam[i]*del[i] )/2
I<-matrix(c(i.tt,i.ee,i.gg,i.dd,
i.ee,i.ee,i.eg,i.ed,
i.gg,i.eg,i.gg,i.gd,
i.dd,i.ed,i.gd,i.dd),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.ee + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.gg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.dd + cov(y21,y22)
v.ee = i.ee
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.gg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
i.ep = matrix(c(i.ee, i.eg, i.ed), ncol = 3)
i.pp = matrix(c(i.tt, i.gg, i.dd, i.gg, i.gg, i.gd, i.dd,
i.gd, i.dd), nrow = 3, ncol = 3)
A = i.ee - i.ep %*% solve(i.pp) %*% t(i.ep)
v.pe = matrix(c(v.te, v.eg, v.ed), nrow = 3)
v.pp = matrix(c(v.tt, v.tg, v.td, v.tg, v.gg, v.gd, v.td,
v.gd, v.td), nrow = 3, ncol = 3)
B = v.ee - 2 * i.ep %*% solve(i.pp) %*% v.pe +
i.ep %*% solve(i.pp) %*% v.pp %*% solve(i.pp) %*% t(i.ep)
eta.var[i]<-0.25*(1/sum(y11)+1/sum(y12)+1/sum(y21)+1/sum(y22))
# s0 = n * ( mean(y12) - f.inv(alp.0[i]+ga.0[i]) +
#              mean(y21) - f.inv(alp.0[i]+del.0[i]) )
# sna = s0 / A * s0 / (2*n)
# srb = s0 / B * s0 / (2*n)
# if( sna <= qchisq(0.95, 1) )  S.na1 = S.na1+1
# if( srb <= qchisq(0.95, 1) )  S.rb1 = S.rb1+1
#wald test
# wna = eta[i] * A * eta[i] * 2*n
# wrb = eta[i] * A^2 / B * eta[i] * 2*n
# if( wna<=qchisq(0.95, 1) )  W.na1 = W.na1+1
# if( wrb<=qchisq(0.95, 1) )  W.rb1 = W.rb1+1
}
mean(eta.var)
var(log(eta))
var(log(eta))*2*seq
mean(eta.var)*2*seq
