i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#correlated data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
mean.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
data.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
set.seed(110225021)
for (i in 1:sim_time){
# nui<-replicate(2,rgamma(n=100000,shape=1/cor_par,scale=cor_par))
# mean.cor[,1]<-mean.true[,1]*nui[,1]
# mean.cor[,2]<-mean.true[,2]*nui[,1]
# mean.cor[,3]<-mean.true[,3]*nui[,2]
# mean.cor[,4]<-mean.true[,4]*nui[,2]
# for (i in 1:nchar('ABBA')){
#   list_poisson <- unlist(lapply(mean.cor[,i], FUN = function(x) rpois(1, x)))
#   data.cor[,i]<-list_poisson
# }
# y1 <- rbvpois(100000, mean.true[1],  mean.true[2], 2.0)
# y2 <- rbvpois(100000, mean.true[3],  mean.true[4], 1.5)
# y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
l1 <- c(1.33, 2); l2 <- c(0.5, 0.75) # lambda for each new variable
y1 <- genCorGen(seq, nvars = 2, params1 = l1, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y1<-y1[,c('y11','y12')]
y2 <- genCorGen(seq, nvars = 2, params1 = l2, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y2
y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
Y <- c(y11,y12,y21,y22)
df.cor = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.cor)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-exp(log(mean(y11)))
eta[i]<-exp(0.5*(log( sum(y12))+log(sum(y21))-log(sum(y11))-log(sum(y22))))
gam[i]<-exp(0.5*(log( sum(y12))+log(sum(y22))-log(sum(y11))-log(sum(y21))))
del[i]<-exp(0.5*(log( sum(y21))+log(sum(y22))-log(sum(y11))-log(sum(y12))))
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#correlated data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
mean.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
data.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
set.seed(110225021)
for (i in 1:sim_time){
# nui<-replicate(2,rgamma(n=100000,shape=1/cor_par,scale=cor_par))
# mean.cor[,1]<-mean.true[,1]*nui[,1]
# mean.cor[,2]<-mean.true[,2]*nui[,1]
# mean.cor[,3]<-mean.true[,3]*nui[,2]
# mean.cor[,4]<-mean.true[,4]*nui[,2]
# for (i in 1:nchar('ABBA')){
#   list_poisson <- unlist(lapply(mean.cor[,i], FUN = function(x) rpois(1, x)))
#   data.cor[,i]<-list_poisson
# }
# y1 <- rbvpois(100000, mean.true[1],  mean.true[2], 2.0)
# y2 <- rbvpois(100000, mean.true[3],  mean.true[4], 1.5)
# y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
l1 <- c(1.33, 2); l2 <- c(0.5, 0.75) # lambda for each new variable
y1 <- genCorGen(seq, nvars = 2, params1 = l1, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y1 <-y1[,c('y11','y12')]
y2 <- genCorGen(seq, nvars = 2, params1 = l2, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y2 <-y1[,c('y21','y22')]
y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
Y <- c(y11,y12,y21,y22)
df.cor = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.cor)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-exp(log(mean(y11)))
eta[i]<-exp(0.5*(log( sum(y12))+log(sum(y21))-log(sum(y11))-log(sum(y22))))
gam[i]<-exp(0.5*(log( sum(y12))+log(sum(y22))-log(sum(y11))-log(sum(y21))))
del[i]<-exp(0.5*(log( sum(y21))+log(sum(y22))-log(sum(y11))-log(sum(y12))))
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#correlated data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
mean.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
data.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
set.seed(110225021)
for (i in 1:sim_time){
# nui<-replicate(2,rgamma(n=100000,shape=1/cor_par,scale=cor_par))
# mean.cor[,1]<-mean.true[,1]*nui[,1]
# mean.cor[,2]<-mean.true[,2]*nui[,1]
# mean.cor[,3]<-mean.true[,3]*nui[,2]
# mean.cor[,4]<-mean.true[,4]*nui[,2]
# for (i in 1:nchar('ABBA')){
#   list_poisson <- unlist(lapply(mean.cor[,i], FUN = function(x) rpois(1, x)))
#   data.cor[,i]<-list_poisson
# }
# y1 <- rbvpois(100000, mean.true[1],  mean.true[2], 2.0)
# y2 <- rbvpois(100000, mean.true[3],  mean.true[4], 1.5)
# y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
l1 <- c(1.33, 2); l2 <- c(0.5, 0.75) # lambda for each new variable
y1 <- genCorGen(seq, nvars = 2, params1 = l1, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y1 <-y1[,c('y11','y12')]
y2 <- genCorGen(seq, nvars = 2, params1 = l2, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y21,y22')
y2 <-y1[,c('y21','y22')]
y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
Y <- c(y11,y12,y21,y22)
df.cor = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.cor)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-exp(log(mean(y11)))
eta[i]<-exp(0.5*(log( sum(y12))+log(sum(y21))-log(sum(y11))-log(sum(y22))))
gam[i]<-exp(0.5*(log( sum(y12))+log(sum(y22))-log(sum(y11))-log(sum(y21))))
del[i]<-exp(0.5*(log( sum(y21))+log(sum(y22))-log(sum(y11))-log(sum(y12))))
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#correlated data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
mean.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
data.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
set.seed(110225021)
for (i in 1:sim_time){
# nui<-replicate(2,rgamma(n=100000,shape=1/cor_par,scale=cor_par))
# mean.cor[,1]<-mean.true[,1]*nui[,1]
# mean.cor[,2]<-mean.true[,2]*nui[,1]
# mean.cor[,3]<-mean.true[,3]*nui[,2]
# mean.cor[,4]<-mean.true[,4]*nui[,2]
# for (i in 1:nchar('ABBA')){
#   list_poisson <- unlist(lapply(mean.cor[,i], FUN = function(x) rpois(1, x)))
#   data.cor[,i]<-list_poisson
# }
# y1 <- rbvpois(100000, mean.true[1],  mean.true[2], 2.0)
# y2 <- rbvpois(100000, mean.true[3],  mean.true[4], 1.5)
# y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
l1 <- c(1.33, 2); l2 <- c(0.5, 0.75) # lambda for each new variable
y1 <- genCorGen(seq, nvars = 2, params1 = l1, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y1 <-y1[,c('y11','y12')]
y2 <- genCorGen(seq, nvars = 2, params1 = l2, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y21,y22')
y2 <-y2[,c('y21','y22')]
y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
Y <- c(y11,y12,y21,y22)
df.cor = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.cor)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-exp(log(mean(y11)))
eta[i]<-exp(0.5*(log( sum(y12))+log(sum(y21))-log(sum(y11))-log(sum(y22))))
gam[i]<-exp(0.5*(log( sum(y12))+log(sum(y22))-log(sum(y11))-log(sum(y21))))
del[i]<-exp(0.5*(log( sum(y21))+log(sum(y22))-log(sum(y11))-log(sum(y12))))
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
View(y11)
df.cor = data.frame(y1,y2,X,Z,G)
View(data.cor)
View(df.cor)
Y <- c(y11,y12,y21,y22)
View(Y)
y11<-as.vector(y1[,1]);y12<-as.vector(y1[,2]);y21<-as.vector(y2[,1]);y22<-as.vector(y2[,2])
Y <- c(y11,y12,y21,y22)
df.cor = data.frame(y1,y2,X,Z,G)
df.cor = data.frame(Y,X,Z,G)
View(df.cor)
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.cor)
y11<-rnbinom(n = seq, size = 2, prob = 0.6)
View(y22)
as.vector(y1[,1])
View(y21)
View(y21)
y1 <-as.matrix(y1[,c('y11','y12')])
l1 <- c(1.33, 2); l2 <- c(0.5, 0.75) # lambda for each new variable
y1 <- genCorGen(seq, nvars = 2, params1 = l1, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y1 <-as.matrix(y1[,c('y11','y12')])
y2 <- genCorGen(seq, nvars = 2, params1 = l2, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y21,y22')
y2 <-as.matrix(y2[,c('y21','y22')])
y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
Y <- c(y11,y12,y21,y22)
df.cor = data.frame(Y,X,Z,G)
View(df.cor)
rm(list=ls(all=TRUE))
require(faraway)
require(numDeriv)
require(MASS)
setwd("C:/Users/User/Documents/Study_CrossoverDesign/RCode")
sim_time=5000;cor_par=0.8;seq=100
param=c(0.3,0,0.4,-1.0)
xmat=matrix(c(1,1,1,1, 0,1,1,0, 0,1,0,1, 0,0,1,1), nrow = 4, ncol = 4,byrow = TRUE)
mean.true=exp(param%*%xmat)
X = c(rep(0,seq), rep(1,2*seq), rep(0,seq))
Z = c(rep(0,seq), rep(1,seq), rep(0,seq), rep(1,seq))
G = c(rep(0,2*seq), rep(1,2*seq))
#========================================================
#correlated data
#========================================================
MLE.optim<-matrix(0, nrow = sim_time, ncol = 4)
MLE.glm<-matrix(0, nrow = sim_time, ncol = 4)
MLE.closeform<-matrix(0, nrow = sim_time, ncol = 4)
invI.optim=0;invI.glm=0;invI.closeform=0;I.cf=0;V.cf=0;I.glm=0;I.optim=0
tao<-c();eta<-c();gam<-c();del<-c()
mean.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
data.cor<-matrix(0, nrow = seq, ncol = nchar('ABBA'))
set.seed(110225021)
for (i in 1:sim_time){
# nui<-replicate(2,rgamma(n=100000,shape=1/cor_par,scale=cor_par))
# mean.cor[,1]<-mean.true[,1]*nui[,1]
# mean.cor[,2]<-mean.true[,2]*nui[,1]
# mean.cor[,3]<-mean.true[,3]*nui[,2]
# mean.cor[,4]<-mean.true[,4]*nui[,2]
# for (i in 1:nchar('ABBA')){
#   list_poisson <- unlist(lapply(mean.cor[,i], FUN = function(x) rpois(1, x)))
#   data.cor[,i]<-list_poisson
# }
# y1 <- rbvpois(100000, mean.true[1],  mean.true[2], 2.0)
# y2 <- rbvpois(100000, mean.true[3],  mean.true[4], 1.5)
# y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
l1 <- c(1.33, 2); l2 <- c(0.5, 0.75) # lambda for each new variable
y1 <- genCorGen(seq, nvars = 2, params1 = l1, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y11,y12')
y1 <-as.matrix(y1[,c('y11','y12')])
y2 <- genCorGen(seq, nvars = 2, params1 = l2, dist = "poisson", rho = .4, corstr = "cs", wide = TRUE,cnames='y21,y22')
y2 <-as.matrix(y2[,c('y21','y22')])
y11<-y1[,1];y12<-y1[,2];y21<-y2[,1];y22<-y2[,2]
Y <- c(y11,y12,y21,y22)
df.cor = data.frame(Y,X,Z,G)
#---------------------------------
#loglikelihood own define
#---------------------------------
negll <- function(param) {
-sum( param[1]*y11-exp(param[1])+sum(param[1:3])*y12-exp(sum(param[1:3]))+(param[1]+param[2]+param[4])*y21-exp(param[1]+param[2]+param[4])+(param[1]+param[3]+param[4])*y22-exp(param[1]+param[3]+param[4]) )}
ABBA<-optim(param <- c(0.45, -0.05, 0.35, -0.25), negll, hessian=TRUE)
MLE.optim[i,]<-ABBA$par
I.optim<-I.optim+(ABBA$hessian)/(2*seq)
invI.optim <-invI.optim+solve((ABBA$hessian)/(2*seq))
#---------------------------------
#GLM
#---------------------------------
mod.1 <- glm(Y ~ X + Z + G, family = poisson(link = "log"), df.cor)
MLE.glm[i,]<-coef(mod.1)
I.glm<-I.glm+solve(vcov(mod.1))/(2*seq)
invI.glm <-invI.glm+vcov(mod.1)*(2*seq)
#---------------------------------
#closeform
#---------------------------------
tao[i]<-exp(log(mean(y11)))
eta[i]<-exp(0.5*(log( sum(y12))+log(sum(y21))-log(sum(y11))-log(sum(y22))))
gam[i]<-exp(0.5*(log( sum(y12))+log(sum(y22))-log(sum(y11))-log(sum(y21))))
del[i]<-exp(0.5*(log( sum(y21))+log(sum(y22))-log(sum(y11))-log(sum(y12))))
i.tt<-( tao[i]+tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.te<-( tao[i]*eta[i]*gam[i] + tao[i]*eta[i]*del[i] )/2
i.tg<-( tao[i]*eta[i]*gam[i] + tao[i]*gam[i]*del[i] )/2
i.td<-( tao[i]*eta[i]*del[i]+tao[i]*gam[i]*del[i] )/2
i.eg<-tao[i]*eta[i]*gam[i]/2
i.ed<-tao[i]*eta[i]*del[i]/2
i.gd<-tao[i]*gam[i]*del[i]/2
I<-matrix( c(i.tt, i.te, i.tg, i.td, i.te, i.te, i.eg, i.ed,
i.tg, i.eg, i.tg, i.gd, i.td, i.ed, i.gd, i.td),nrow=4, ncol=4, byrow = TRUE)
I.cf<-I.cf+I
invI.closeform <- invI.closeform + solve(I)
v.tt = i.tt + cov(y11,y12)+cov(y21,y22)
v.te = i.te + cov(y11,y12)/2+cov(y21,y22)/2
v.tg = i.tg + cov(y11,y12)/2+cov(y21,y22)/2
v.td = i.td + cov(y21,y22)
v.ee = i.te
v.eg = i.eg + cov(y21,y22)/2
v.ed = i.ed + cov(y21,y22)/2
v.gg = i.tg
v.gd = i.gd + cov(y21,y22)/2
V.cf<-V.cf+matrix( c(v.tt, v.te, v.tg, v.td, v.te, v.ee, v.eg, v.ed,
v.tg, v.eg, v.gg, v.gd, v.td, v.ed, v.gd, v.td),nrow=4, ncol=4, byrow = TRUE)
}
colMeans(MLE.optim)
I.optim/sim_time
invI.optim/sim_time
colMeans(MLE.glm)
I.glm/sim_time
invI.glm/sim_time
log(c(mean(tao),mean(eta),mean(gam),mean(del)))
I.cf/sim_time
invI.closeform/sim_time
V.cf/sim_time
invI.closeform/sim_time
V.cf/sim_time
